plugins {
    id 'java'
}

group 'com.quartzy'
version '1.0-SNAPSHOT'

sourceCompatibility = 8
targetCompatibility = 8

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = 'https://repo.dmulloy2.net/repository/public/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public' }
}

configurations {
    extraLibs
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    extraLibs group: 'com.github.cryptomorin', name: 'XSeries', version: '8.4.0'
}


test {
    useJUnitPlatform()
}

jar {
    if (project.hasProperty("jarOutput")){
        File outputDir = new File(project.projectDir.absolutePath + "/" + project.property("jarOutput"))
        destinationDirectory.set(outputDir)
    }
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path)}

task allJar(type: Jar, dependsOn: subprojects.assemble) {
    if (project.hasProperty("jarOutput")){
        File outputDir = new File(project.projectDir.absolutePath + "/" + project.property("jarOutput"))
        destinationDirectory.set(outputDir)
    }

    archiveBaseName.convention("QAPI")
    archiveBaseName.set("QAPI")

    from { configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) } }

    subprojects.each { subproject ->
        from subproject.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}
artifacts {
    archives allJar
}


